// Code generated from /Users/anqiansong/goland/go/go-zero_kingxt/tools/goctl/api/parser/g4/ApiParser.g4 by ANTLR 4.9. DO NOT EDIT.

package api

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 22, 249,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 6, 15, 119, 10, 15, 13, 15, 14,
	15, 120, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 7, 16, 129, 10, 16,
	12, 16, 14, 16, 132, 11, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17,
	3, 17, 7, 17, 141, 10, 17, 12, 17, 14, 17, 144, 11, 17, 3, 18, 3, 18, 3,
	18, 7, 18, 149, 10, 18, 12, 18, 14, 18, 152, 11, 18, 3, 18, 3, 18, 3, 19,
	3, 19, 3, 19, 6, 19, 159, 10, 19, 13, 19, 14, 19, 160, 3, 19, 3, 19, 3,
	20, 3, 20, 7, 20, 167, 10, 20, 12, 20, 14, 20, 170, 11, 20, 3, 20, 3, 20,
	7, 20, 174, 10, 20, 12, 20, 14, 20, 177, 11, 20, 5, 20, 179, 10, 20, 3,
	21, 3, 21, 7, 21, 183, 10, 21, 12, 21, 14, 21, 186, 11, 21, 3, 22, 3, 22,
	5, 22, 190, 10, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 5, 23, 198,
	10, 23, 3, 23, 5, 23, 201, 10, 23, 3, 23, 3, 23, 3, 23, 6, 23, 206, 10,
	23, 13, 23, 14, 23, 207, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 5, 23, 215,
	10, 23, 3, 24, 3, 24, 3, 24, 7, 24, 220, 10, 24, 12, 24, 14, 24, 223, 11,
	24, 3, 24, 5, 24, 226, 10, 24, 3, 25, 3, 25, 3, 26, 3, 26, 7, 26, 232,
	10, 26, 12, 26, 14, 26, 235, 11, 26, 3, 26, 5, 26, 238, 10, 26, 3, 27,
	3, 27, 5, 27, 242, 10, 27, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 248, 10,
	28, 3, 130, 2, 29, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10,
	19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19,
	37, 20, 39, 21, 41, 22, 43, 2, 45, 2, 47, 2, 49, 2, 51, 2, 53, 2, 55, 2,
	3, 2, 20, 5, 2, 11, 12, 14, 15, 34, 34, 4, 2, 12, 12, 15, 15, 4, 2, 36,
	36, 94, 94, 6, 2, 12, 12, 15, 15, 94, 94, 98, 98, 4, 2, 11, 11, 34, 34,
	7, 2, 12, 12, 15, 15, 36, 36, 49, 49, 98, 98, 4, 2, 71, 71, 103, 103, 4,
	2, 45, 45, 47, 47, 10, 2, 36, 36, 41, 41, 94, 94, 100, 100, 104, 104, 112,
	112, 116, 116, 118, 118, 3, 2, 50, 53, 3, 2, 50, 57, 5, 2, 50, 59, 67,
	72, 99, 104, 3, 2, 50, 59, 4, 2, 50, 59, 97, 97, 6, 2, 38, 38, 67, 92,
	97, 97, 99, 124, 4, 2, 2, 129, 55298, 56321, 3, 2, 55298, 56321, 3, 2,
	56322, 57345, 2, 266, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 3, 57, 3, 2, 2, 2, 5, 59, 3, 2, 2, 2,
	7, 61, 3, 2, 2, 2, 9, 63, 3, 2, 2, 2, 11, 65, 3, 2, 2, 2, 13, 67, 3, 2,
	2, 2, 15, 69, 3, 2, 2, 2, 17, 79, 3, 2, 2, 2, 19, 81, 3, 2, 2, 2, 21, 83,
	3, 2, 2, 2, 23, 88, 3, 2, 2, 2, 25, 97, 3, 2, 2, 2, 27, 109, 3, 2, 2, 2,
	29, 118, 3, 2, 2, 2, 31, 124, 3, 2, 2, 2, 33, 136, 3, 2, 2, 2, 35, 145,
	3, 2, 2, 2, 37, 155, 3, 2, 2, 2, 39, 164, 3, 2, 2, 2, 41, 180, 3, 2, 2,
	2, 43, 187, 3, 2, 2, 2, 45, 214, 3, 2, 2, 2, 47, 216, 3, 2, 2, 2, 49, 227,
	3, 2, 2, 2, 51, 229, 3, 2, 2, 2, 53, 241, 3, 2, 2, 2, 55, 247, 3, 2, 2,
	2, 57, 58, 7, 63, 2, 2, 58, 4, 3, 2, 2, 2, 59, 60, 7, 42, 2, 2, 60, 6,
	3, 2, 2, 2, 61, 62, 7, 43, 2, 2, 62, 8, 3, 2, 2, 2, 63, 64, 7, 125, 2,
	2, 64, 10, 3, 2, 2, 2, 65, 66, 7, 127, 2, 2, 66, 12, 3, 2, 2, 2, 67, 68,
	7, 44, 2, 2, 68, 14, 3, 2, 2, 2, 69, 70, 7, 118, 2, 2, 70, 71, 7, 107,
	2, 2, 71, 72, 7, 111, 2, 2, 72, 73, 7, 103, 2, 2, 73, 74, 7, 48, 2, 2,
	74, 75, 7, 86, 2, 2, 75, 76, 7, 107, 2, 2, 76, 77, 7, 111, 2, 2, 77, 78,
	7, 103, 2, 2, 78, 16, 3, 2, 2, 2, 79, 80, 7, 93, 2, 2, 80, 18, 3, 2, 2,
	2, 81, 82, 7, 95, 2, 2, 82, 20, 3, 2, 2, 2, 83, 84, 7, 66, 2, 2, 84, 85,
	7, 102, 2, 2, 85, 86, 7, 113, 2, 2, 86, 87, 7, 101, 2, 2, 87, 22, 3, 2,
	2, 2, 88, 89, 7, 66, 2, 2, 89, 90, 7, 106, 2, 2, 90, 91, 7, 99, 2, 2, 91,
	92, 7, 112, 2, 2, 92, 93, 7, 102, 2, 2, 93, 94, 7, 110, 2, 2, 94, 95, 7,
	103, 2, 2, 95, 96, 7, 116, 2, 2, 96, 24, 3, 2, 2, 2, 97, 98, 7, 107, 2,
	2, 98, 99, 7, 112, 2, 2, 99, 100, 7, 118, 2, 2, 100, 101, 7, 103, 2, 2,
	101, 102, 7, 116, 2, 2, 102, 103, 7, 104, 2, 2, 103, 104, 7, 99, 2, 2,
	104, 105, 7, 101, 2, 2, 105, 106, 7, 103, 2, 2, 106, 107, 7, 125, 2, 2,
	107, 108, 7, 127, 2, 2, 108, 26, 3, 2, 2, 2, 109, 110, 7, 66, 2, 2, 110,
	111, 7, 117, 2, 2, 111, 112, 7, 103, 2, 2, 112, 113, 7, 116, 2, 2, 113,
	114, 7, 120, 2, 2, 114, 115, 7, 103, 2, 2, 115, 116, 7, 116, 2, 2, 116,
	28, 3, 2, 2, 2, 117, 119, 9, 2, 2, 2, 118, 117, 3, 2, 2, 2, 119, 120, 3,
	2, 2, 2, 120, 118, 3, 2, 2, 2, 120, 121, 3, 2, 2, 2, 121, 122, 3, 2, 2,
	2, 122, 123, 8, 15, 2, 2, 123, 30, 3, 2, 2, 2, 124, 125, 7, 49, 2, 2, 125,
	126, 7, 44, 2, 2, 126, 130, 3, 2, 2, 2, 127, 129, 11, 2, 2, 2, 128, 127,
	3, 2, 2, 2, 129, 132, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 130, 128, 3, 2,
	2, 2, 131, 133, 3, 2, 2, 2, 132, 130, 3, 2, 2, 2, 133, 134, 7, 44, 2, 2,
	134, 135, 7, 49, 2, 2, 135, 32, 3, 2, 2, 2, 136, 137, 7, 49, 2, 2, 137,
	138, 7, 49, 2, 2, 138, 142, 3, 2, 2, 2, 139, 141, 10, 3, 2, 2, 140, 139,
	3, 2, 2, 2, 141, 144, 3, 2, 2, 2, 142, 140, 3, 2, 2, 2, 142, 143, 3, 2,
	2, 2, 143, 34, 3, 2, 2, 2, 144, 142, 3, 2, 2, 2, 145, 150, 7, 36, 2, 2,
	146, 149, 10, 4, 2, 2, 147, 149, 5, 45, 23, 2, 148, 146, 3, 2, 2, 2, 148,
	147, 3, 2, 2, 2, 149, 152, 3, 2, 2, 2, 150, 148, 3, 2, 2, 2, 150, 151,
	3, 2, 2, 2, 151, 153, 3, 2, 2, 2, 152, 150, 3, 2, 2, 2, 153, 154, 7, 36,
	2, 2, 154, 36, 3, 2, 2, 2, 155, 158, 7, 98, 2, 2, 156, 159, 10, 5, 2, 2,
	157, 159, 5, 45, 23, 2, 158, 156, 3, 2, 2, 2, 158, 157, 3, 2, 2, 2, 159,
	160, 3, 2, 2, 2, 160, 158, 3, 2, 2, 2, 160, 161, 3, 2, 2, 2, 161, 162,
	3, 2, 2, 2, 162, 163, 7, 98, 2, 2, 163, 38, 3, 2, 2, 2, 164, 168, 7, 60,
	2, 2, 165, 167, 9, 6, 2, 2, 166, 165, 3, 2, 2, 2, 167, 170, 3, 2, 2, 2,
	168, 166, 3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 169, 178, 3, 2, 2, 2, 170,
	168, 3, 2, 2, 2, 171, 179, 5, 35, 18, 2, 172, 174, 10, 7, 2, 2, 173, 172,
	3, 2, 2, 2, 174, 177, 3, 2, 2, 2, 175, 173, 3, 2, 2, 2, 175, 176, 3, 2,
	2, 2, 176, 179, 3, 2, 2, 2, 177, 175, 3, 2, 2, 2, 178, 171, 3, 2, 2, 2,
	178, 175, 3, 2, 2, 2, 179, 40, 3, 2, 2, 2, 180, 184, 5, 55, 28, 2, 181,
	183, 5, 53, 27, 2, 182, 181, 3, 2, 2, 2, 183, 186, 3, 2, 2, 2, 184, 182,
	3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 42, 3, 2, 2, 2, 186, 184, 3, 2,
	2, 2, 187, 189, 9, 8, 2, 2, 188, 190, 9, 9, 2, 2, 189, 188, 3, 2, 2, 2,
	189, 190, 3, 2, 2, 2, 190, 191, 3, 2, 2, 2, 191, 192, 5, 51, 26, 2, 192,
	44, 3, 2, 2, 2, 193, 194, 7, 94, 2, 2, 194, 215, 9, 10, 2, 2, 195, 200,
	7, 94, 2, 2, 196, 198, 9, 11, 2, 2, 197, 196, 3, 2, 2, 2, 197, 198, 3,
	2, 2, 2, 198, 199, 3, 2, 2, 2, 199, 201, 9, 12, 2, 2, 200, 197, 3, 2, 2,
	2, 200, 201, 3, 2, 2, 2, 201, 202, 3, 2, 2, 2, 202, 215, 9, 12, 2, 2, 203,
	205, 7, 94, 2, 2, 204, 206, 7, 119, 2, 2, 205, 204, 3, 2, 2, 2, 206, 207,
	3, 2, 2, 2, 207, 205, 3, 2, 2, 2, 207, 208, 3, 2, 2, 2, 208, 209, 3, 2,
	2, 2, 209, 210, 5, 49, 25, 2, 210, 211, 5, 49, 25, 2, 211, 212, 5, 49,
	25, 2, 212, 213, 5, 49, 25, 2, 213, 215, 3, 2, 2, 2, 214, 193, 3, 2, 2,
	2, 214, 195, 3, 2, 2, 2, 214, 203, 3, 2, 2, 2, 215, 46, 3, 2, 2, 2, 216,
	225, 5, 49, 25, 2, 217, 220, 5, 49, 25, 2, 218, 220, 7, 97, 2, 2, 219,
	217, 3, 2, 2, 2, 219, 218, 3, 2, 2, 2, 220, 223, 3, 2, 2, 2, 221, 219,
	3, 2, 2, 2, 221, 222, 3, 2, 2, 2, 222, 224, 3, 2, 2, 2, 223, 221, 3, 2,
	2, 2, 224, 226, 5, 49, 25, 2, 225, 221, 3, 2, 2, 2, 225, 226, 3, 2, 2,
	2, 226, 48, 3, 2, 2, 2, 227, 228, 9, 13, 2, 2, 228, 50, 3, 2, 2, 2, 229,
	237, 9, 14, 2, 2, 230, 232, 9, 15, 2, 2, 231, 230, 3, 2, 2, 2, 232, 235,
	3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 233, 234, 3, 2, 2, 2, 234, 236, 3, 2,
	2, 2, 235, 233, 3, 2, 2, 2, 236, 238, 9, 14, 2, 2, 237, 233, 3, 2, 2, 2,
	237, 238, 3, 2, 2, 2, 238, 52, 3, 2, 2, 2, 239, 242, 5, 55, 28, 2, 240,
	242, 9, 14, 2, 2, 241, 239, 3, 2, 2, 2, 241, 240, 3, 2, 2, 2, 242, 54,
	3, 2, 2, 2, 243, 248, 9, 16, 2, 2, 244, 248, 10, 17, 2, 2, 245, 246, 9,
	18, 2, 2, 246, 248, 9, 19, 2, 2, 247, 243, 3, 2, 2, 2, 247, 244, 3, 2,
	2, 2, 247, 245, 3, 2, 2, 2, 248, 56, 3, 2, 2, 2, 26, 2, 120, 130, 142,
	148, 150, 158, 160, 168, 175, 178, 184, 189, 197, 200, 207, 214, 219, 221,
	225, 233, 237, 241, 247, 3, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "'('", "')'", "'{'", "'}'", "'*'", "'time.Time'", "'['", "']'",
	"'@doc'", "'@handler'", "'interface{}'", "'@server'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "ATDOC", "ATHANDLER", "INTERFACE",
	"ATSERVER", "WS", "COMMENT", "LINE_COMMENT", "STRING", "RAW_STRING", "LINE_VALUE",
	"ID",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"ATDOC", "ATHANDLER", "INTERFACE", "ATSERVER", "WS", "COMMENT", "LINE_COMMENT",
	"STRING", "RAW_STRING", "LINE_VALUE", "ID", "ExponentPart", "EscapeSequence",
	"HexDigits", "HexDigit", "Digits", "LetterOrDigit", "Letter",
}

type ApiParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewApiParserLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ApiParserLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewApiParserLexer(input antlr.CharStream) *ApiParserLexer {
	l := new(ApiParserLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ApiParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ApiParserLexer tokens.
const (
	ApiParserLexerT__0         = 1
	ApiParserLexerT__1         = 2
	ApiParserLexerT__2         = 3
	ApiParserLexerT__3         = 4
	ApiParserLexerT__4         = 5
	ApiParserLexerT__5         = 6
	ApiParserLexerT__6         = 7
	ApiParserLexerT__7         = 8
	ApiParserLexerT__8         = 9
	ApiParserLexerATDOC        = 10
	ApiParserLexerATHANDLER    = 11
	ApiParserLexerINTERFACE    = 12
	ApiParserLexerATSERVER     = 13
	ApiParserLexerWS           = 14
	ApiParserLexerCOMMENT      = 15
	ApiParserLexerLINE_COMMENT = 16
	ApiParserLexerSTRING       = 17
	ApiParserLexerRAW_STRING   = 18
	ApiParserLexerLINE_VALUE   = 19
	ApiParserLexerID           = 20
)
