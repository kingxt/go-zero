// Code generated from /Users/anqiansong/goland/go/go-zero_kingxt/tools/goctl/api/parser/g4/ApiParser.g4 by ANTLR 4.9. DO NOT EDIT.

package api

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 15, 206,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 3, 2, 3, 2, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6,
	3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8,
	3, 8, 3, 9, 6, 9, 85, 10, 9, 13, 9, 14, 9, 86, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 10, 7, 10, 95, 10, 10, 12, 10, 14, 10, 98, 11, 10, 3, 10, 3,
	10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 7, 11, 107, 10, 11, 12, 11, 14,
	11, 110, 11, 11, 3, 12, 3, 12, 3, 12, 7, 12, 115, 10, 12, 12, 12, 14, 12,
	118, 11, 12, 3, 12, 3, 12, 3, 13, 3, 13, 7, 13, 124, 10, 13, 12, 13, 14,
	13, 127, 11, 13, 3, 13, 3, 13, 7, 13, 131, 10, 13, 12, 13, 14, 13, 134,
	11, 13, 5, 13, 136, 10, 13, 3, 14, 3, 14, 7, 14, 140, 10, 14, 12, 14, 14,
	14, 143, 11, 14, 3, 15, 3, 15, 5, 15, 147, 10, 15, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 16, 3, 16, 5, 16, 155, 10, 16, 3, 16, 5, 16, 158, 10, 16, 3,
	16, 3, 16, 3, 16, 6, 16, 163, 10, 16, 13, 16, 14, 16, 164, 3, 16, 3, 16,
	3, 16, 3, 16, 3, 16, 5, 16, 172, 10, 16, 3, 17, 3, 17, 3, 17, 7, 17, 177,
	10, 17, 12, 17, 14, 17, 180, 11, 17, 3, 17, 5, 17, 183, 10, 17, 3, 18,
	3, 18, 3, 19, 3, 19, 7, 19, 189, 10, 19, 12, 19, 14, 19, 192, 11, 19, 3,
	19, 5, 19, 195, 10, 19, 3, 20, 3, 20, 5, 20, 199, 10, 20, 3, 21, 3, 21,
	3, 21, 3, 21, 5, 21, 205, 10, 21, 3, 96, 2, 22, 3, 3, 5, 4, 7, 5, 9, 6,
	11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29,
	2, 31, 2, 33, 2, 35, 2, 37, 2, 39, 2, 41, 2, 3, 2, 19, 5, 2, 11, 12, 14,
	15, 34, 34, 4, 2, 12, 12, 15, 15, 4, 2, 36, 36, 94, 94, 4, 2, 11, 11, 34,
	34, 6, 2, 12, 12, 15, 15, 36, 36, 49, 49, 4, 2, 71, 71, 103, 103, 4, 2,
	45, 45, 47, 47, 10, 2, 36, 36, 41, 41, 94, 94, 100, 100, 104, 104, 112,
	112, 116, 116, 118, 118, 3, 2, 50, 53, 3, 2, 50, 57, 5, 2, 50, 59, 67,
	72, 99, 104, 3, 2, 50, 59, 4, 2, 50, 59, 97, 97, 6, 2, 38, 38, 67, 92,
	97, 97, 99, 124, 4, 2, 2, 129, 55298, 56321, 3, 2, 55298, 56321, 3, 2,
	56322, 57345, 2, 221, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 3, 43, 3, 2, 2, 2, 5, 45,
	3, 2, 2, 2, 7, 47, 3, 2, 2, 2, 9, 49, 3, 2, 2, 2, 11, 54, 3, 2, 2, 2, 13,
	63, 3, 2, 2, 2, 15, 75, 3, 2, 2, 2, 17, 84, 3, 2, 2, 2, 19, 90, 3, 2, 2,
	2, 21, 102, 3, 2, 2, 2, 23, 111, 3, 2, 2, 2, 25, 121, 3, 2, 2, 2, 27, 137,
	3, 2, 2, 2, 29, 144, 3, 2, 2, 2, 31, 171, 3, 2, 2, 2, 33, 173, 3, 2, 2,
	2, 35, 184, 3, 2, 2, 2, 37, 186, 3, 2, 2, 2, 39, 198, 3, 2, 2, 2, 41, 204,
	3, 2, 2, 2, 43, 44, 7, 63, 2, 2, 44, 4, 3, 2, 2, 2, 45, 46, 7, 42, 2, 2,
	46, 6, 3, 2, 2, 2, 47, 48, 7, 43, 2, 2, 48, 8, 3, 2, 2, 2, 49, 50, 7, 66,
	2, 2, 50, 51, 7, 102, 2, 2, 51, 52, 7, 113, 2, 2, 52, 53, 7, 101, 2, 2,
	53, 10, 3, 2, 2, 2, 54, 55, 7, 66, 2, 2, 55, 56, 7, 106, 2, 2, 56, 57,
	7, 99, 2, 2, 57, 58, 7, 112, 2, 2, 58, 59, 7, 102, 2, 2, 59, 60, 7, 110,
	2, 2, 60, 61, 7, 103, 2, 2, 61, 62, 7, 116, 2, 2, 62, 12, 3, 2, 2, 2, 63,
	64, 7, 107, 2, 2, 64, 65, 7, 112, 2, 2, 65, 66, 7, 118, 2, 2, 66, 67, 7,
	103, 2, 2, 67, 68, 7, 116, 2, 2, 68, 69, 7, 104, 2, 2, 69, 70, 7, 99, 2,
	2, 70, 71, 7, 101, 2, 2, 71, 72, 7, 103, 2, 2, 72, 73, 7, 125, 2, 2, 73,
	74, 7, 127, 2, 2, 74, 14, 3, 2, 2, 2, 75, 76, 7, 66, 2, 2, 76, 77, 7, 117,
	2, 2, 77, 78, 7, 103, 2, 2, 78, 79, 7, 116, 2, 2, 79, 80, 7, 120, 2, 2,
	80, 81, 7, 103, 2, 2, 81, 82, 7, 116, 2, 2, 82, 16, 3, 2, 2, 2, 83, 85,
	9, 2, 2, 2, 84, 83, 3, 2, 2, 2, 85, 86, 3, 2, 2, 2, 86, 84, 3, 2, 2, 2,
	86, 87, 3, 2, 2, 2, 87, 88, 3, 2, 2, 2, 88, 89, 8, 9, 2, 2, 89, 18, 3,
	2, 2, 2, 90, 91, 7, 49, 2, 2, 91, 92, 7, 44, 2, 2, 92, 96, 3, 2, 2, 2,
	93, 95, 11, 2, 2, 2, 94, 93, 3, 2, 2, 2, 95, 98, 3, 2, 2, 2, 96, 97, 3,
	2, 2, 2, 96, 94, 3, 2, 2, 2, 97, 99, 3, 2, 2, 2, 98, 96, 3, 2, 2, 2, 99,
	100, 7, 44, 2, 2, 100, 101, 7, 49, 2, 2, 101, 20, 3, 2, 2, 2, 102, 103,
	7, 49, 2, 2, 103, 104, 7, 49, 2, 2, 104, 108, 3, 2, 2, 2, 105, 107, 10,
	3, 2, 2, 106, 105, 3, 2, 2, 2, 107, 110, 3, 2, 2, 2, 108, 106, 3, 2, 2,
	2, 108, 109, 3, 2, 2, 2, 109, 22, 3, 2, 2, 2, 110, 108, 3, 2, 2, 2, 111,
	116, 7, 36, 2, 2, 112, 115, 10, 4, 2, 2, 113, 115, 5, 31, 16, 2, 114, 112,
	3, 2, 2, 2, 114, 113, 3, 2, 2, 2, 115, 118, 3, 2, 2, 2, 116, 114, 3, 2,
	2, 2, 116, 117, 3, 2, 2, 2, 117, 119, 3, 2, 2, 2, 118, 116, 3, 2, 2, 2,
	119, 120, 7, 36, 2, 2, 120, 24, 3, 2, 2, 2, 121, 125, 7, 60, 2, 2, 122,
	124, 9, 5, 2, 2, 123, 122, 3, 2, 2, 2, 124, 127, 3, 2, 2, 2, 125, 123,
	3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 126, 135, 3, 2, 2, 2, 127, 125, 3, 2,
	2, 2, 128, 136, 5, 23, 12, 2, 129, 131, 10, 6, 2, 2, 130, 129, 3, 2, 2,
	2, 131, 134, 3, 2, 2, 2, 132, 130, 3, 2, 2, 2, 132, 133, 3, 2, 2, 2, 133,
	136, 3, 2, 2, 2, 134, 132, 3, 2, 2, 2, 135, 128, 3, 2, 2, 2, 135, 132,
	3, 2, 2, 2, 136, 26, 3, 2, 2, 2, 137, 141, 5, 41, 21, 2, 138, 140, 5, 39,
	20, 2, 139, 138, 3, 2, 2, 2, 140, 143, 3, 2, 2, 2, 141, 139, 3, 2, 2, 2,
	141, 142, 3, 2, 2, 2, 142, 28, 3, 2, 2, 2, 143, 141, 3, 2, 2, 2, 144, 146,
	9, 7, 2, 2, 145, 147, 9, 8, 2, 2, 146, 145, 3, 2, 2, 2, 146, 147, 3, 2,
	2, 2, 147, 148, 3, 2, 2, 2, 148, 149, 5, 37, 19, 2, 149, 30, 3, 2, 2, 2,
	150, 151, 7, 94, 2, 2, 151, 172, 9, 9, 2, 2, 152, 157, 7, 94, 2, 2, 153,
	155, 9, 10, 2, 2, 154, 153, 3, 2, 2, 2, 154, 155, 3, 2, 2, 2, 155, 156,
	3, 2, 2, 2, 156, 158, 9, 11, 2, 2, 157, 154, 3, 2, 2, 2, 157, 158, 3, 2,
	2, 2, 158, 159, 3, 2, 2, 2, 159, 172, 9, 11, 2, 2, 160, 162, 7, 94, 2,
	2, 161, 163, 7, 119, 2, 2, 162, 161, 3, 2, 2, 2, 163, 164, 3, 2, 2, 2,
	164, 162, 3, 2, 2, 2, 164, 165, 3, 2, 2, 2, 165, 166, 3, 2, 2, 2, 166,
	167, 5, 35, 18, 2, 167, 168, 5, 35, 18, 2, 168, 169, 5, 35, 18, 2, 169,
	170, 5, 35, 18, 2, 170, 172, 3, 2, 2, 2, 171, 150, 3, 2, 2, 2, 171, 152,
	3, 2, 2, 2, 171, 160, 3, 2, 2, 2, 172, 32, 3, 2, 2, 2, 173, 182, 5, 35,
	18, 2, 174, 177, 5, 35, 18, 2, 175, 177, 7, 97, 2, 2, 176, 174, 3, 2, 2,
	2, 176, 175, 3, 2, 2, 2, 177, 180, 3, 2, 2, 2, 178, 176, 3, 2, 2, 2, 178,
	179, 3, 2, 2, 2, 179, 181, 3, 2, 2, 2, 180, 178, 3, 2, 2, 2, 181, 183,
	5, 35, 18, 2, 182, 178, 3, 2, 2, 2, 182, 183, 3, 2, 2, 2, 183, 34, 3, 2,
	2, 2, 184, 185, 9, 12, 2, 2, 185, 36, 3, 2, 2, 2, 186, 194, 9, 13, 2, 2,
	187, 189, 9, 14, 2, 2, 188, 187, 3, 2, 2, 2, 189, 192, 3, 2, 2, 2, 190,
	188, 3, 2, 2, 2, 190, 191, 3, 2, 2, 2, 191, 193, 3, 2, 2, 2, 192, 190,
	3, 2, 2, 2, 193, 195, 9, 13, 2, 2, 194, 190, 3, 2, 2, 2, 194, 195, 3, 2,
	2, 2, 195, 38, 3, 2, 2, 2, 196, 199, 5, 41, 21, 2, 197, 199, 9, 13, 2,
	2, 198, 196, 3, 2, 2, 2, 198, 197, 3, 2, 2, 2, 199, 40, 3, 2, 2, 2, 200,
	205, 9, 15, 2, 2, 201, 205, 10, 16, 2, 2, 202, 203, 9, 17, 2, 2, 203, 205,
	9, 18, 2, 2, 204, 200, 3, 2, 2, 2, 204, 201, 3, 2, 2, 2, 204, 202, 3, 2,
	2, 2, 205, 42, 3, 2, 2, 2, 24, 2, 86, 96, 108, 114, 116, 125, 132, 135,
	141, 146, 154, 157, 164, 171, 176, 178, 182, 190, 194, 198, 204, 3, 2,
	3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "'('", "')'", "'@doc'", "'@handler'", "'interface{}'", "'@server'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "ATDOC", "ATHANDLER", "INTERFACE", "ATSERVER", "WS", "COMMENT",
	"LINE_COMMENT", "STRING", "LINE_VALUE", "ID",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "ATDOC", "ATHANDLER", "INTERFACE", "ATSERVER",
	"WS", "COMMENT", "LINE_COMMENT", "STRING", "LINE_VALUE", "ID", "ExponentPart",
	"EscapeSequence", "HexDigits", "HexDigit", "Digits", "LetterOrDigit", "Letter",
}

type ApiParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewApiParserLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ApiParserLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewApiParserLexer(input antlr.CharStream) *ApiParserLexer {
	l := new(ApiParserLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ApiParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ApiParserLexer tokens.
const (
	ApiParserLexerT__0         = 1
	ApiParserLexerT__1         = 2
	ApiParserLexerT__2         = 3
	ApiParserLexerATDOC        = 4
	ApiParserLexerATHANDLER    = 5
	ApiParserLexerINTERFACE    = 6
	ApiParserLexerATSERVER     = 7
	ApiParserLexerWS           = 8
	ApiParserLexerCOMMENT      = 9
	ApiParserLexerLINE_COMMENT = 10
	ApiParserLexerSTRING       = 11
	ApiParserLexerLINE_VALUE   = 12
	ApiParserLexerID           = 13
)
